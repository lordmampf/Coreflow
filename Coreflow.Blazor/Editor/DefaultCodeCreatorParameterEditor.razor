
<div class="cf-code-creator-parameter-editor">

    @if (CodeCreator != null && CodeCreator is IParametrized parametrized)
    {
        @foreach (var groupingPm in parametrized.GetParameters().GroupBy(p => p.Category))
        {
            <h6 class="cf-code-creator-parameter-editor-category-title cf-category-title">@groupingPm.Key</h6>

            <table class="cf-code-creator-parameter-editor-table">

                @foreach (var pm in groupingPm)
                {
                    var argument = parametrized.Arguments.First(a => a.Name == pm.Name);

                    <tr>
                        <td title="@pm.Direction @pm.Name @pm.Type" class="cf-code-creator-parameter-editor-parameter-title">@pm.GetDisplayNameOrName()</td>
                    </tr>
                    <tr>
                        <td class="cf-code-creator-parameter-editor-parameter-content"><CodeEditor @bind-Code="@argument.Code" IsInline="true" /></td>
                    </tr>
                }

            </table>
        }
    }

</div>


@code {

    private ICodeCreator mCodeCreator = null;

    [Parameter]
    public ICodeCreator CodeCreator
    {
        get
        {
            return mCodeCreator;
        }
        set
        {
            mCodeCreator = value;
            StateHasChanged();
        }
    }

    protected override void OnInitialized()
    {
    }

    protected override void OnParametersSet()
    {

    }

    public void InvokeStateHasChanged()
    {
        base.StateHasChanged();
    }

}
